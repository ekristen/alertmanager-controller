{{- range .Values.hooks }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ $.Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
    app.kubernetes.io/instance: {{ $.Release.Name | quote }}
    app.kubernetes.io/version: {{ $.Chart.AppVersion }}
    helm.sh/chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
  annotations:
    "helm.sh/hook": {{ .hook }}
    {{- if .weight }}
    "helm.sh/hook-weight": {{ .weight }}
    {{- end }}
    "helm.sh/hook-delete-policy": {{ default "hook-succeeded" .deletePolicy }}
spec:
  template:
    metadata:
      name: "{{ $.Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
        app.kubernetes.io/instance: {{ $.Release.Name | quote }}
        helm.sh/chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      {{- range $cont := .containers }}
      - name: {{ .name }}
        image: {{ .image }}
        imagePullPolicy: {{ default $.Values.image.pullPolicy $cont.imagePullPolicy }}
        {{- if $cont.command }}
        command:
{{ toYaml $cont.command | indent 10 }}
        {{- end }}
        {{- if $cont.args }}
        args:
{{ toYaml $cont.args | indent 10 }}
        {{- end }}
        {{- if or $cont.env $cont.envFromSecret }}
        env:
        {{- range $key, $value := $cont.env }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
        {{- end }}
        {{- range $secret := $cont.envFromSecret }}
        - name: "{{ $secret.name }}"
          valueFrom:
            secretKeyRef:
              name: {{ $secret.secretName }}
              key: {{ $secret.secretKeyRef }}
        {{- end }}
        {{- end }}
    {{- end }}
{{- end }}