name: goreleaser

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/checkout@v3
        if: github.event_name == 'push'
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: "v1.13.0"
      - name: Setup Cosign
        run: |
          echo "${COSIGN_KEY}" > "$GITHUB_WORKSPACE/cosign.key"
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
      - name: Set GoReleaser Default Args
        if: startsWith(github.ref, 'refs/tags/') == true
        run: |
          echo "GORELEASER_ARGS=" >> $GITHUB_ENV
      - name: Set GoReleaser Options for Branch
        if: startsWith(github.ref, 'refs/tags/') == false
        run: |
          echo "GORELEASER_ARGS=--snapshot" >> $GITHUB_ENV
      - name: Set GoReleaser Options for Renovate
        if: startsWith(github.ref, 'refs/heads/renovate') == true
        run: |
          echo "GORELEASER_ARGS=--snapshot --skip-publish" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist ${{ env.GORELEASER_ARGS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.SROCBOT_ACTIONS_GITHUB_TOKEN }}
      - name: Push Docker Images (for branches)
        if: github.ref == 'refs/heads/master' || github.event.pull_request.base.ref == 'master'
        run: |
          docker images --format "{{.Repository}}:{{.Tag}}" | grep "ekristen/alertmanager-controller" | xargs -L1 docker push

  helm-chart:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') == true
    needs:
      - goreleaser
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: azure/setup-helm@v3
      - run: |
          helm package chart
          mv $(ls -a *.tgz | head -n1) alertmanager-controller-${{ github.ref_name }}.tgz
          echo "chart_file=alertmanager-controller-${{ github.ref_name }}.tgz" >> $GITHUB_ENV
      - name: upload helm chart
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.chart_file }}
          asset_name: ${{ env.chart_file }}
          tag: ${{ github.ref }}
          overwrite: true

  release-chart:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') == true
    steps:
      - uses: actions/checkout@v2
      - run: |
          mkdir -p charts
          mv chart charts/alertmanager-controller/
      - name: Publish Helm charts
        uses: stefanprodan/helm-gh-pages@master
        with:
          charts_dir: charts
          charts_url: https://ekristen.github.io/alertmanager-controller/
          branch: gh-pages
          target_dir: charts
          token: ${{ secrets.GITHUB_TOKEN }}
